{
	"info": {
		"_postman_id": "aa5b6cda-a46e-40e8-9b1a-2757fe757933",
		"name": "PETSTORE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40717589"
	},
	"item": [
		{
			"name": "Add a new pet to the store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"/*\r",
							"const petId = responseJson.id;\r",
							"const categoryId = responseJson.category[\"id\"];\r",
							"const categoryName = responseJson.category[\"name\"];\r",
							"const petName = responseJson.name;\r",
							"const photo = responseJson.photoUrls[\"0\"];\r",
							"const tagsId = responseJson.tags[\"0\"][\"id\"];\r",
							"const tagsName = responseJson.tags[\"0\"][\"name\"];\r",
							"const status = responseJson.status;\r",
							"*/\r",
							"\r",
							"pm.collectionVariables.set(\"petId\", responseJson.id);\r",
							"pm.collectionVariables.set(\"categoryId\", responseJson.category[\"id\"]);\r",
							"pm.collectionVariables.set(\"categoryName\", responseJson.category[\"name\"]);\r",
							"pm.collectionVariables.set(\"petName\", responseJson.name);\r",
							"pm.collectionVariables.set(\"photo\", responseJson.photoUrls[\"0\"]);\r",
							"pm.collectionVariables.set(\"tagsId\", responseJson.tags[\"0\"][\"id\"]);\r",
							"pm.collectionVariables.set(\"tagsName\", responseJson.tags[\"0\"][\"name\"]);\r",
							"pm.collectionVariables.set(\"status\", responseJson.status);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The animal is available for sale\", () => {\r",
							"    pm.expect(responseJson.status).to.eql(\"available\");\r",
							"});\r",
							"\r",
							"pm.test(\"The animal has a name\", () => {\r",
							"    pm.expect(responseJson.name).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Digital animal ID\", () => {\r",
							"    pm.expect(responseJson.id).to.be.a(\"number\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{$randomInt}},\r\n  \"category\": {\r\n    \"id\": {{$randomInt}},\r\n    \"name\": \"{{$randomLastName}}\"\r\n  },\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"photoUrls\": [\r\n    \"{{$randomAnimalsImage}}\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": {{$randomInt}},\r\n      \"name\": \"{{$randomCity}}\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/pet",
					"host": [
						"{{url}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an existing pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"There is a link to a picture of an animal\", () => {\r",
							"    pm.expect(responseJson.photoUrls[\"0\"]).to.include(\"http://\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{petId}},\r\n  \"category\": {\r\n    \"id\": {{categoryId}},\r\n    \"name\": \"{{categoryName}}\"\r\n  },\r\n  \"name\": \"{{petName}}\",\r\n  \"photoUrls\": [\r\n    \"{{photo}}\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": {{tagsId}},\r\n      \"name\": \"{{tagsName}}\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/pet",
					"host": [
						"{{url}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find pet by status = pending",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/pet/{{pending}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"pet",
						"{{pending}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find pet by status =sold",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/pet/{{sold}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"pet",
						"{{sold}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find pet by status = availabl",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/pet/{{available}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"pet",
						"{{available}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find pet by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{petId}},\r\n  \"category\": {\r\n    \"id\": {{categoryId}},\r\n    \"name\": \"{{name}}\"\r\n  },\r\n  \"name\": \"{{petName}}\",\r\n  \"photoUrls\": [\r\n    \"{{photo}}\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": {{tagsId}},\r\n      \"name\": \"{{tagsName}}\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/pet/{{petId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"pet",
						"{{petId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update an existing pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{petId}},\r\n  \"category\": {\r\n    \"id\": {{categoryId}},\r\n    \"name\": \"{{categoryName}}\"\r\n  },\r\n  \"name\": \"{{petName}}\",\r\n  \"photoUrls\": [\r\n    \"{{photo}}\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": {{tagsId}},\r\n      \"name\": \"{{tagsName}}\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/pet",
					"host": [
						"{{url}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a pet in the store with form data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"/*\r",
							"const petId = responseJson.id;\r",
							"const categoryId = responseJson.category[\"id\"];\r",
							"const categoryName = responseJson.category[\"name\"];\r",
							"const petName = responseJson.name;\r",
							"const photo = responseJson.photoUrls[\"0\"];\r",
							"const tagsId = responseJson.tags[\"0\"][\"id\"];\r",
							"const tagsName = responseJson.tags[\"0\"][\"name\"];\r",
							"const status = responseJson.status;\r",
							"*/\r",
							"/*\r",
							"pm.collectionVariables.set(\"petId\", responseJson.id);\r",
							"pm.collectionVariables.set(\"categoryId\", responseJson.category[\"id\"]);\r",
							"pm.collectionVariables.set(\"categoryName\", responseJson.category[\"name\"]);\r",
							"pm.collectionVariables.set(\"petName\", responseJson.name);\r",
							"pm.collectionVariables.set(\"photo\", responseJson.photoUrls[\"0\"]);\r",
							"pm.collectionVariables.set(\"tagsId\", responseJson.tags[\"0\"][\"id\"]);\r",
							"pm.collectionVariables.set(\"tagsName\", responseJson.tags[\"0\"][\"name\"]);\r",
							"pm.collectionVariables.set(\"status\", responseJson.status]);\r",
							"*/\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Animal found by ID\", () => {\r",
							"    pm.expect(responseJson.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Type undefined\", () => {\r",
							"    pm.expect(responseJson.type).to.eql(\"unknown\");\r",
							"});\r",
							"\r",
							"pm.test(\"Animal ID 122\", () => {\r",
							"    pm.expect(responseJson.message).to.eql(\"122\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "id",
							"value": "{{petId}}",
							"type": "default"
						},
						{
							"key": "name",
							"value": "{{petName}}",
							"type": "default"
						},
						{
							"key": "status",
							"value": "sold",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{url}}/pet/{{petId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"pet",
						"{{petId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deletes a pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Animal found by ID\", () => {\r",
							"    pm.expect(responseJson.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Type undefined\", () => {\r",
							"    pm.expect(responseJson.type).to.eql(\"unknown\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/pet/{{petId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"pet",
						"{{petId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": ""
		},
		{
			"key": "petId",
			"value": ""
		},
		{
			"key": "categoryId",
			"value": ""
		},
		{
			"key": "categoryName",
			"value": ""
		},
		{
			"key": "petName",
			"value": ""
		},
		{
			"key": "photo",
			"value": ""
		},
		{
			"key": "tagsId",
			"value": ""
		},
		{
			"key": "tagsName",
			"value": ""
		},
		{
			"key": "sold",
			"value": "findByStatus?status=sold"
		},
		{
			"key": "available",
			"value": "findByStatus?status=available"
		},
		{
			"key": "pending",
			"value": "findByStatus?status=pending"
		},
		{
			"key": "status",
			"value": ""
		}
	]
}